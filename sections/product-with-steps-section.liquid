{{ 'timber.css' | asset_url | stylesheet_tag }}
{{ 'themecopy.css' | asset_url | stylesheet_tag }}
{{ 'bootstrap.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-badge.css' | asset_url | stylesheet_tag }}
{{ 'component-product-without-variants.css' | asset_url | stylesheet_tag }}
{% include "colors-snippet" %}
<div class="blue-background color-{{ section.settings.product_steps_color_scheme }}">
<!-- /templates/product.liquid -->
{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

{%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'">
  <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<div class="wrapper padd-bot-xl min-height-element" itemscope itemtype="http://schema.org/Product" id="ProductSection--{{ section.id }}"
  data-section-id="{{ section.id }}"
  data-section-type="product-template"
  data-image-zoom-type="{{ section.settings.enable_image_zoom }}"
  data-enable-history-state="true"
  data-stacked-layout="{% if section.settings.media_layout == "stacked" %}true{% else %}false{% endif %}"
  {% if first_3d_model %}data-has-model="true"{% endif %}>

    <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
    <meta itemprop="image" content="{{ product.featured_media | img_url: 'grande' }}">

    {% assign current_variant = product.selected_or_first_available_variant %}
    {% assign featured_media = current_variant.featured_media | default: product.featured_media %}

    {% assign stacked = false %}
    {% if section.settings.media_layout == "stacked" %}{% assign stacked = true %}{% endif %}
    {%- assign first_media = true -%}

    <div class="product grid product-single custom-product-3 product-with-steps">
     
      
      {% comment %}
      	Place custom product images here
      {% endcomment %}
      <div class="grid__item large--seven-twelfths text-center">
        <div class="product-title text-center no-desktop">

          <p class="product-single__description examples-text no-desktop">
            {%- for block in section.blocks -%}
            {%- case block.type -%}
            {%- when 'description' -%}
              {{ product.description }}
            {%- endcase -%}
            {%- endfor -%}

          {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when 'text' -%}
            <span class="visually-hidden">{{ 'accessibility.vendor' | t }}</span>
            <p class="no-d product-vendor  {% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">{{- block.settings.text -}}</p>
          {%- endcase -%}
          {%- endfor -%}
          
          {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when 'price' -%}
            <div class="no-js-hidden price-{{ section.id }}" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
              {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large product-single__price justify-content-center euro no-desktop' -%}
              
            </div>
            <div {{ block.shopify_attributes }}>
              {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                {{ form | payment_terms }}
              {%- endform -%}
            </div> 
            {%- when '@app' -%}
            {% render block %}
          {%- endcase -%}
          {%- endfor -%}
        </div>
        {% render "product-template-slider" %}
      </div>
    
      <div class="grid__item product-single__meta--wrapper large--five-twelfths">
        <div class="product-single__meta">
          {% if section.settings.product_vendor_enable %}
            <h2 class="product-single__vendor" itemprop="brand">{{ product.vendor }}</h2>
          {% endif %}
          {%- for block in section.blocks -%}
          {%- case block.type -%}
          {%- when 'text' -%}
          <span class="visually-hidden">{{ 'accessibility.vendor' | t }}</span>
          <p class="product-vendor steps {% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">{{- block.settings.text -}}</p>
          {%- endcase -%}
          {%- endfor -%}
          <h1 class="product-single__title text-left center-it no-mobile" itemprop="name" style="max-width: 420px;">
            {%- for block in section.blocks -%}
            {%- case block.type -%}
            {%- when 'title' -%}
            {{ product.title }}
            {%- endcase -%}
            {%- endfor -%}
          </h1>
          
          <div class="center-it" style="max-width: 420px;">
            
            {%- for block in section.blocks -%}
            {%- case block.type -%}
            {%- when 'price' -%}
            <div class="no-mobile">
              <div class="no-js-hidden price-{{ section.id }}" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
                {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large product-single__price' -%}
              </div>
              <div {{ block.shopify_attributes }}>
                {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  {{ form | payment_terms }}
                {%- endform -%}
              </div>
            </div>

              {%- when '@app' -%}
              {% render block %}
          {%- endcase -%}
          {%- endfor -%}

            {%- for block in section.blocks -%}
            {%- case block.type -%}
            {%- when 'description' -%}
            <div class="product-description product-single__description rte no-mobile examples-text" itemprop="description">
              {{ product.description }}
            </div>
            {%- endcase -%}
            {%- endfor -%}

            <div class="steps-box no-mobile">
              <p>steps</p>
              {%- for option in product.options_with_values -%}
                <span class="steps-swatch color-{{ section.settings.steps_color_scheme }} step{% if forloop.first %} step-selected{%- endif -%}">{{ forloop.index }}</span>
                {%- assign step_number = forloop.index -%}
              {%- endfor -%}
              {% for block in section.blocks %}
                {%- case block.type -%}
                  {%- when 'image_block' -%}
                    {% if block.settings.image_block %}
                    {%- assign step_number = step_number | plus: 1 -%}
                      <span class="steps-swatch color-{{ section.settings.steps_color_scheme }} step">{{ step_number }}</span>
                    {% endif %}
                  {%- when 'extra_product' -%}
                    {%- if block.settings.product_handle != blank -%}
                    {%- assign step_number = step_number | plus: 1 -%}
                      <span class="steps-swatch color-{{ section.settings.steps_color_scheme }} step">{{ step_number }}</span>
                    {%- endif -%}
                {%- endcase -%}
              {%- endfor -%}
            </div>

            <div itemprop="aggregateRating" itemtype="http://schema.org/AggregateRating" itemscope>
              <meta itemprop="reviewCount" content="35" />
              <meta itemprop="ratingValue" content="4.9" />
            </div>
            {% capture "form_classes" %}
            product-single__form{% if product.has_only_default_variant %} product-single__form--no-variants{% endif %}
          {%- endcapture %}
          {% capture "form_id" %}product-form-{{ section.id }}{%- endcapture -%}
          
          {% form 'product', product, class:form_classes, id:form_id, data-product-form: '' %}
          <input type="hidden" name="items[0][id]" value="{{ product.selected_or_first_available_variant.id }}" form="product-form-{{ section.id }}">
          <div id="upsellProductId"></div>
          <input type="hidden" name="sections" value="cart-total-price,cart-items-template" form="product-form-{{ section.id }}">


              {% unless product.has_only_default_variant %}
                <variant-radios class="no-js-hidden variant-radios" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                  {%- for option in product.options_with_values -%}
                  {% if option.name contains 'Title' %}
                      <fieldset class="js product-form__input tab steps">
                        <div class="color-option">
                          <label class="color-option single-option-radio__label product-single__description flex-box align-center"
                            for="ProductSelect-option-{{ forloop.index0 }}">
                            {{ forloop.index }}. One or two pets? <span class="flex-box info-icon">{% render "info-icon" %}<div class="info-box first">You can choose to have one or two pets on your portrait.</div></span>
                          </label>
                          <div class="option-title-wrapper flex-box text-center justify-between">
                            {%- for value in option.values -%}
                              <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                    name="{{ option.name }}"
                                    class="display-non option-title-input"
                                    data-option="option-{{ value }}"
                                    onchange="checkFrames(this)"
                                    value="{{ value | escape }}"
                                    form="product-form-{{ section.id }}"
                                    {% if option.selected_value == value %}checked{% endif %}
                              >
                              {% assign colorsSch = colorScheme | strip_newlines | split: "," %}
                              {% for colors in colorsSch %}
                                {% assign color = colors | split: ":" %}
                              {% assign downcase1 = color[0] | downcase %}
                              {% assign downcase2 = value | downcase %}
                                {% if downcase2 == downcase1%}
                                  {% assign variantColorCode = color[1] %}
                                  {% break %}
                                {% endif %}
                              {% endfor %} 
                              {% if variantColorCode == blank %}
                              {% assign variantColorCode = "url(//cdn.shopify.com/s/files/1/0594/3604/0367/files/none.png?v=1634556355)" %}
                              {% endif %}
                              <label for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" data-option="option-{{ value }}" class="option-{{ value }} flex-box flex-column option-title-label">
                                <span 
                                  class="option-title-label-img" 
                                  id="ProductSelect-option-title-One-manual" 
                                  loading="lazy" 
                                  style="background: {{ variantColorCode }};background-size: 100%;background-position: center;background-repeat: no-repeat;">
                                </span>
                                <p>{{ value }}</p>
                              </label>
                            {%- endfor -%}
                          </div>
                      </div>
                      </fieldset>

                      {% elsif option.name contains 'Color' %}
                      <fieldset class="js product-form__input second-step tab steps">
                        <div class="color-option">
                          <label class="color-option single-option-radio__label product-single__description flex-box align-center"
                            for="ProductSelect-option-{{ forloop.index0 }}">
                            {{ forloop.index }}. Frame background color <span class="flex-box info-icon">{% render "info-icon" %}<div class="info-box second">Background colour of your portrait.</div></span>
                          </label>
                          <div class="color-div flex-box justify-between">
                            {%- for value in option.values -%}
                              <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                    name="{{ option.name }}"
                                    class="display-non"
                                    value="{{ value | escape }}"
                                    form="product-form-{{ section.id }}"
                                    {% if option.selected_value == value %}checked{% endif %}
                              >
                              <label 
                                class="frame-swatch" 
                                for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                data-index="option{{ option_index }}" name="option{{ option.position }}"
                                id="ProductSelect-option-{{ option.name | handleize }}-{{ frame | escape | remove: " " }}-manual" 
                                data-option-id="ProductSelect-option-{{ option.name | handleize }}-{{ value | replace: " " | escape }}-manual"
                              >
                              {% assign colorsSch = colorScheme | strip_newlines | split: "," %}
                              {% for colors in colorsSch %}
                                {% assign color = colors | split: ":" %}
                              {% assign downcase1 = color[0] | downcase %}
                              {% assign downcase2 = value | downcase %}
                                {% if downcase2 == downcase1 %}
                                  {% assign variantColorCode = color[1] %}
                                  {% break %}
                                {% endif %}
                              {% endfor %} 
                              {% if variantColorCode == blank %}
                              {% assign variantColorCode = "url(//cdn.shopify.com/s/files/1/0594/3604/0367/files/none.png?v=1634556355)" %}
                              {% endif %}
                                <span class="frame-color" style="background: {{ variantColorCode }};"></span>
                                <span class="colors-text">{{frame}}</span>
                                {{ value }}
                              </label>
                            {%- endfor -%}
                          </div>
                        </div>
                      </fieldset>
                      {% elsif option.name contains 'Size' %}
                        <fieldset class="js product-form__input third-step tab steps">
                          <div class="">
                            <label class="color-option single-option-radio__label product-single__description flex-box align-center"
                              for="ProductSelect-option-{{ forloop.index0 }}">
                              {{ forloop.index }}. Size of canvas (in cm)? <span class="flex-box info-icon">{% render "info-icon" %}<div class="info-box third">Three sizes. Two pets are in landscape mode.</div></span>
                            </label>
                            <div class="color-div flex-box justify-between">
                              {%- for value in option.values -%}
                                <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                      name="{{ option.name }}"
                                      class="display-non"
                                      value="{{ value | escape }}"
                                      form="product-form-{{ section.id }}"
                                      {% if option.selected_value == value %}checked{% endif %}
                                >
                                <label
                                  class="frame-swatch {{ value | escape }}" 
                                  data-index="option{{ option_index }}" 
                                  name="option{{ option.position }}" 
                                  id="ProductSelect-option-{{ option.name | handleize }}-{{ value | escape | remove: " " }}-manual"
                                  for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}">
                                  <span class="frame-size">{{value}}</span>
                                </label>
                              {%- endfor -%}
                            </div>
                          </div>
                        </fieldset>
                      {%- else -%}
                      <fieldset class="js product-form__input tab">
                        <label class="color-option single-option-radio__label product-single__description flex-box align-center"
                        for="ProductSelect-option-{{ forloop.index0 }}">
                        {{ forloop.index }}. {{ option.name }}<span class="flex-box info-icon">{% render "info-icon" %}<div class="info-box third">Three sizes. Two pets are in landscape mode.</div></span>
                      </label>
                      <div class="sub-marg-top sub-marg-bottom">

                        {%- for value in option.values -%}
                          <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                                name="{{ option.name }}"
                                value="{{ value | escape }}"
                                class="display-non"
                                form="product-form-{{ section.id }}"
                                {% if option.selected_value == value %}checked{% endif %}
                          >
                          <label for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}"
                          class="badge"
                          >
                            {{ value }}
                          </label>
                        {%- endfor -%}
                      </div>
                      </fieldset>
                      {%- endif -%}
                      {%- assign fieldset_step_number = forloop.index -%}
                  {%- endfor -%}
                  <script id="product-json" type="application/json">
                    {{ product.variants | json }}
                  </script>
                  {% for block in section.blocks %}
                    {%- case block.type -%}
                      {%- when 'image_block' -%}
                        {% if block.settings.image_block %}
                        {%- assign fieldset_step_number = fieldset_step_number | plus: 1 -%}
                          <div class="fourth-step steps tab">
                            <label class="flex-box product-single__description">{{ fieldset_step_number }}. Upload your pet(s) below: <span class="flex-box info-icon">{% render "info-icon" %}<div class="info-box fourth">Upload a clear pictture. Write "EMPTY" when you don't want text written.</div></span></label>
                              
                                <div class="flex-box justify-between align-center pet1 sub-marg-top sub-marg-bottom">
                                  <div class="line-item-property__field pet-imgbox has-advanced-upload">
                                  <div class="box__input">              
                                    <!-- <input type="hidden" name="properties[Image we will design]" value="No"> -->
                                    <input id="pet1" required type="file" class="box__file required" data-multiple-caption="Error {count} files selected" accept="image/*" name="items[0][properties[Image we will design 🎨]]" value="Yes" enctype="multipart/form-data" 
                                    form="product-form-{{ section.id }}"
                                    />
                <!--                     <label for="pet1"><strong>UPLOAD</strong><span class="box__dragndrop"></span></label> -->
                                    <button type="submit" class="box__button">Upload</button>
                                    <label for="pet1"><span class="box__icon svg-inline--fa"></span></label>
                                  </div>

                                  </div>
                                  <p class="line-item-property__field flex-box flex-column">
                                    <label for="Petname1">Pet name</label>
                                    <input type="text" class="" id="Petname1" name="items[0][properties[_Petname]]"
                                    form="product-form-{{ section.id }}"
                                    >
                                  </p>
                                </div>
                              
                                <div class="flex-box justify-between align-center pet2 sub-marg-bottom no-disp">
                                  <div class="line-item-property__field pet-imgbox has-advanced-upload">
                                  <div class="box__input">              
                <!--                     <input type="hidden" name="properties[Image we will design ]" value="No"> -->
                                    <input id="pet2" type="file" class="box__file" data-multiple-caption="Error {count} files selected" accept="image/*" name="items[0][properties[_Second Image we will design 🎨]]" value="Yes" enctype="multipart/form-data" 
                                    form="product-form-{{ section.id }}"
                                    />
                    <!--                 <label for="image"><strong>UPLOAD</strong><span class="box__dragndrop"></span></label> -->
                                    <button type="submit" class="box__button">Upload</button>
                                    <label for="pet2"><span class="box__icon svg-inline--fa"></span></label>
                                  </div>

                                  </div>
                                <p class="line-item-property__field flex-box flex-column">
                                  <label for="Petname2">Pet name</label>
                                  <input type="text" class="" id="Petname2" name="items[0][properties[_Petname2]]"
                                  form="product-form-{{ section.id }}"
                                  >
                                </p>
                              </div>
                          </div>
                        {% endif %}
                      {%- when 'extra_product' -%}
                        {%- if block.settings.product_handle != blank -%}
                          {% assign selected_product =  block.settings.product_handle %}
                          {%- assign fieldset_step_number = fieldset_step_number | plus: 1 -%}
                          <div class="fifth-step steps tab">
                            <label class="flex-box product-single__description">{{ fieldset_step_number }}. Do you need a hanging system? <span class="flex-box info-icon">{% render "info-icon" %}<div class="info-box fifth">You can stick your portrait on a wall or screw it in the wall.</div></span></label>
                            <div class="flex-box hanging-div sub-marg-top">
                                <div class="flex-box flex-column hanging-products hanging-product-selected" data-variant="" data-price="€0,00">
                                    <img src="{{ "no-system-01.png"  | asset_url }}" alt="{{ image.alt | escape }}" loading="lazy">
                                    <p class="text-center">+ €0,00</p>
                                </div>
                              
                              {% for variant in selected_product.variants %}
                                <div class="flex-box flex-column hanging-products" data-variant="{{ variant.id }}" data-price="{{ variant.price | money_without_currency | replace: ",", "." }}">
                                    <img src="{{ variant.image.src | image_url }}" alt="{{ variant.image.alt | escape }}" loading="lazy">
                                    <p class="text-center">+ {{ variant.price | money }}</p>
                                </div>
                              {% endfor%}
                            </div>
                          </div>
                        {%- endif -%}
                    {%- endcase -%}
                  {%- endfor -%}


                  <div class="flex-box justify-center align-center step-buttons">
                    <button type="button" class="back-link no-mobile" id="prevBtn" onclick="nextPrev(-1)">
                      BACK
                    </button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)" class="button border-button no-mobile">
                      Next
                    </button>

                    <button type="submit" 
                      name="add" 
                      id="AddToCart--product-custom-template-2" 
                      disabled="true" 
                      class="AddToCart button border-button no-desktop"
                      data-section-id="{{ form_id }}"
                      >
                      {{ 'products.product.add_to_cart' | t }}
                    </button>
                  </div>
                
                </variant-radios>
                <select id="ProductSelect--product-custom-template" class="product-single__variants no-js">
                  {% for variant in product.variants %}                  
                      <option {% if variant == product.selected_or_first_available_variant %}
                         {% endif %}
                        data-sku="{{ variant.sku }}"
                        data-variant-price="{{ variant.price | money | replace:",","."   }}"
                        data-avaliable="{% if variant.available %}yes{% else %}no{% endif %}"
                        value="{{ variant.id }}"
                        variant-name="{{ variant.title }}"
                        >
                        {{ variant.title }} - {{ variant.price | money_with_currency }}
                      </option>
                  {% endfor %}
                </select>
              {% endunless %}
              {% endform %}
{%- comment -%}
              {% if section.settings.quantity_enabled %}
              <div class="product-single__quantity">
                <label for="Quantity" class="product-single__quantity-label js-quantity-selector">{{ 'products.product.quantity' | t }}</label>
                <input type="number" hidden="hidden" id="Quantity" name="quantity" value="1" min="1" class="js-quantity-selector">
              </div>
              {% endif %}
    
            {%- endcomment -%}
            
            <br>
                        <!-- ---------------------------------------------------- -->
                        <share-button class="share-button " {{ block.shopify_attributes }}>
                          <button class="share-button__button button button--secondary hidden">
                            {% render 'icon-share' %}
                            {{ 'general.share.share' | t }}
                          </button>
                          <details>
                            <summary class="share-button__button button button--tertiary">
                              {% render 'icon-share' %}
                              {{ 'general.share.share' | t }}
                            </summary>
                            <div class="share-button__fallback">
                              <div class="field">
                                <input type="text"
                                      class="field__input"
                                      id="url"
                                      value="{{ shop.url | append: product.url }}"
                                      placeholder="{{ 'general.share.share_url' | t }}"
                                      onclick="this.select();"
                                      readonly
                                >
                                <label class="field__label" for="url">{{ 'general.share.share_url' | t }}</label>
                              </div>
                              <button class="button button--tertiary">
                                {% render 'icon-clipboard' %}
                                {{ 'general.share.copy_to_clipboard' | t }}
                              </button>
                              <span id="ShareMessage-{{ section.id }}" class="share-button__message hidden" role="status" aria-hidden="true">
                                {{ 'general.share.success_message' | t }}
                              </span>
                            </div>
                          </details>
                        </share-button>
                        <script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
                        <script src="{{ 'share.js' | asset_url }}" defer="defer"></script>
                        <!-- ---------------------------------------------------- -->
<!-- ---------------------------------------------------- -->
          {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

          {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}

          <pickup-availability class="product__pickup-availabilities no-js-hidden"
            {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
            data-base-url="{{ shop.url }}{{ routes.root_url }}"
            data-variant-id="{{ product.selected_or_first_available_variant.id }}"
            data-has-only-default-variant="{{ product.has_only_default_variant }}"
          >
            <template>
              <pickup-availability-preview class="pickup-availability-preview">
                {% render 'icon-unavailable' %}
                <div class="pickup-availability-info">
                  <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                  <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                </div>
              </div>
            </template>
          </pickup-availability>
         

          <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
<!-- ---------------------------------------------------- -->
          </div>

        </div>
      </div>                  
      

    </div>
</div>
</div>


{%- if first_3d_model -%}
  <script type="application/json" id="ProductJSON-{{ product.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>

  <script src="{{ 'product-model.js' | asset_url }}" defer></script>
{%- endif -%}

<script src="{{ 'product-custom-2.js' | asset_url }}" defer="defer"></script>
<script>
 

 function AfterBodyResize() {
  var curr = $(".step-selected").text();

}
  
  $(window).resize(function(){
    if(window.outerWidth < 768) {
    	$(".steps").removeClass("no-disp")
        $("#AddToCart--product-custom-template-2").removeClass("no-disp");
    }
    else {
        // AfterBodyResize();
    }
  });
  
  if(window.outerWidth < 768) {
    	$(".steps").removeClass("no-disp");
        $("#AddToCart--product-custom-template-2").removeClass("no-disp");
  }
  else {
        AfterBodyResize();
  }
  
  /*


  
*/
</script>

<script type="text/javascript">
  

	'use strict';

	;( function ( document, window, index )
	{
		// feature detection for drag&drop upload
		var isAdvancedUpload = function()
			{
				var div = document.createElement( 'div' );
				return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) && 'FormData' in window && 'FileReader' in window;
			}();


		// applying the effect for every form
		var forms = document.querySelectorAll( '.pet1 .pet-imgbox' );
		Array.prototype.forEach.call( forms, function( form )
		{
			var input		 = form.querySelector( 'input[type="file"]' ),
				label		 = form.querySelector( 'label' ),
				errorMsg	 = form.querySelector( '.box__error span' ),
				restart		 = form.querySelectorAll( '.box__restart' ),
				droppedFiles = false,
				showFiles	 = function( files )
				{
					label.style.visibility = "hidden"; //files.length > 1 ? ( input.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', files.length ) : files[ 0 ].name;
				}



			// drag&drop files if the feature is available
			if( isAdvancedUpload )
			{
				form.classList.add( 'has-advanced-upload' ); // letting the CSS part to know drag&drop is supported by the browser

				[ 'drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop' ].forEach( function( event )
				{
					form.addEventListener( event, function( e )
					{
						// preventing the unwanted behaviours
						e.preventDefault();
						e.stopPropagation();
					});
				});
				[ 'dragover', 'dragenter' ].forEach( function( event )
				{
					form.addEventListener( event, function()
					{
						form.classList.add( 'is-dragover' );
					});
				});
				[ 'dragleave', 'dragend', 'drop' ].forEach( function( event )
				{
					form.addEventListener( event, function()
					{
						form.classList.remove( 'is-dragover' );
					});
				});
				form.addEventListener( 'drop', function( e )
				{
                  droppedFiles = e.dataTransfer.files[0]; // the files that were dropped
                  var fileTypeX = e.dataTransfer.files[0].type;
                  var validImageTypesX = ["image/jpeg", "image/png"];                
                  if ($.inArray(fileTypeX, validImageTypesX) < 0) {
                    console.log('invalid file');
                  } else {
                    input.files = e.dataTransfer.files;
                    showFiles( e.dataTransfer.files );
                    var reader = new FileReader();

                    reader.onload = function(e) {
                      //$('#blah').attr('src', e.target.result);                                        
                      $(".pet1 .pet-imgbox").css("background-color", "transparent");                                        
                      $(".pet1 .pet-imgbox").css("background-repeat", "no-repeat");                                     
                      $(".pet1 .pet-imgbox").css("background-size", "contain");                                  
                      $(".pet1 .pet-imgbox").css("background-position", "center");
                      $(".pet1 .pet-imgbox").css("background-image", "url(" + e.target.result + ")");
                      $(".pet1 .box__icon").css("visibility", "hidden");
                      if ($(window).width() < 767) {
                        $('#AddToCartForm--product-template').submit();
                        $('.mobile-cart-submit').addClass('special-loader');
                        $('.mobile-cart-submit').html('Loading<span class="bounce1"></span><span class="bounce2"></span><span class="bounce3"></span>');
                      }
                    }

                    reader.readAsDataURL(e.dataTransfer.files[0]);
                  } 

					

									});
			}
          $("#pet1").change(function() {            		
                  var fileTypeX = this.files[0].type;
                  var validImageTypesX = ["image/jpeg", "image/png"];
                  if ($.inArray(fileTypeX, validImageTypesX) < 0) {
                    console.log('invalid file');
                  } else {
                    //input.files = this.files;
                    showFiles( this.files );
                    var reader = new FileReader();

                    reader.onload = function(e) {
                      //$('#blah').attr('src', e.target.result);                                        
                      $(".pet1 .pet-imgbox").css("background-color", "transparent");                                        
                      $(".pet1 .pet-imgbox").css("background-repeat", "no-repeat");                                    
                      $(".pet1 .pet-imgbox").css("background-size", "contain");                                  
                      $(".pet1 .pet-imgbox").css("background-position", "center");
                      $(".pet1 .pet-imgbox").css("background-image", "url(" + e.target.result + ")");
                      $(".pet1 .box__icon").css("visibility", "hidden");
                      if ($(window).width() < 767) {
                        if (!(window.location.href.indexOf("custom-t-shirt") > -1)) {
                          $('#AddToCartForm--product-template').submit();
                          $('.mobile-cart-submit').addClass('special-loader');
                          $('.mobile-cart-submit').html('Loading<span class="bounce1"></span><span class="bounce2"></span><span class="bounce3"></span>');
                        }
                      }
                    }

                    reader.readAsDataURL(this.files[0]);
                  }
          });
			// Firefox focus bug fix for file input
			input.addEventListener( 'focus', function(){ input.classList.add( 'has-focus' ); });
			input.addEventListener( 'blur', function(){ input.classList.remove( 'has-focus' ); });

		});
	}( document, window, 0 ));
  

</script>


<script type="text/javascript">
  

	'use strict';

	;( function ( document, window, index )
	{
		// feature detection for drag&drop upload
		var isAdvancedUpload = function()
			{
				var div = document.createElement( 'div' );
				return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) ) && 'FormData' in window && 'FileReader' in window;
			}();


		// applying the effect for every form
		var forms2 = document.querySelectorAll( '.pet2 .pet-imgbox' );
		Array.prototype.forEach.call( forms2, function( form2 )
		{
			var input		 = form2.querySelector( 'input[type="file"]' ),
				label		 = form2.querySelector( 'label' ),
				errorMsg	 = form2.querySelector( '.box__error span' ),
				restart		 = form2.querySelectorAll( '.box__restart' ),
				droppedFiles = false,
				showFiles	 = function( files )
				{
					label.style.visibility = "hidden"; //files.length > 1 ? ( input.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', files.length ) : files[ 0 ].name;
				}



			// drag&drop files if the feature is available
			if( isAdvancedUpload )
			{
				form2.classList.add( 'has-advanced-upload' ); // letting the CSS part to know drag&drop is supported by the browser

				[ 'drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop' ].forEach( function( event )
				{
					form2.addEventListener( event, function( e )
					{
						// preventing the unwanted behaviours
						e.preventDefault();
						e.stopPropagation();
					});
				});
				[ 'dragover', 'dragenter' ].forEach( function( event )
				{
					form2.addEventListener( event, function()
					{
						form2.classList.add( 'is-dragover' );
					});
				});
				[ 'dragleave', 'dragend', 'drop' ].forEach( function( event )
				{
					form2.addEventListener( event, function()
					{
						form2.classList.remove( 'is-dragover' );
					});
				});
				form2.addEventListener( 'drop', function( e )
				{
                  droppedFiles = e.dataTransfer.files[0]; // the files that were dropped
                  var fileTypeX = e.dataTransfer.files[0].type;
                  var validImageTypesX = ["image/jpeg", "image/png"];                
                  if ($.inArray(fileTypeX, validImageTypesX) < 0) {
                    console.log('invalid file');
                  } else {
                    input.files = e.dataTransfer.files;
                    showFiles( e.dataTransfer.files );
                    var reader = new FileReader();

                    reader.onload = function(e) {
                      //$('#blah').attr('src', e.target.result);                                        
                      $(".pet2 .pet-imgbox").css("background-color", "transparent");                                        
                      $(".pet2 .pet-imgbox").css("background-repeat", "no-repeat");                                     
                      $(".pet2 .pet-imgbox").css("background-size", "contain");                                  
                      $(".pet2 .pet-imgbox").css("background-position", "center");
                      $(".pet2 .pet-imgbox").css("background-image", "url(" + e.target.result + ")");
                      $(".pet2 .box__icon").css("visibility", "hidden");
                      if ($(window).width() < 767) {
                        $('#AddToCartForm--product-template').submit();
                        $('.mobile-cart-submit').addClass('special-loader');
                        $('.mobile-cart-submit').html('Loading<span class="bounce1"></span><span class="bounce2"></span><span class="bounce3"></span>');
                      }
                    }

                    reader.readAsDataURL(e.dataTransfer.files[0]);
                  } 

					

									});
			}
          $("#pet2").change(function() {            		
                  var fileTypeX = this.files[0].type;
                  var validImageTypesX = ["image/jpeg", "image/png"];
                  if ($.inArray(fileTypeX, validImageTypesX) < 0) {
                    console.log('invalid file');
                  } else {
                    //input.files = this.files;
                    showFiles( this.files );
                    var reader = new FileReader();

                    reader.onload = function(e) {
                      //$('#blah').attr('src', e.target.result);                                        
                      $(".pet2 .pet-imgbox").css("background-color", "transparent");                                        
                      $(".pet2 .pet-imgbox").css("background-repeat", "no-repeat");                                    
                      $(".pet2 .pet-imgbox").css("background-size", "contain");                                  
                      $(".pet2 .pet-imgbox").css("background-position", "center");
                      $(".pet2 .pet-imgbox").css("background-image", "url(" + e.target.result + ")");
                      $(".pet2 .box__icon").css("visibility", "hidden");
                      if ($(window).width() < 767) {
                        if (!(window.location.href.indexOf("custom-t-shirt") > -1)) {
                          $('#AddToCartForm--product-template').submit();
                          $('.mobile-cart-submit').addClass('special-loader');
                          $('.mobile-cart-submit').html('Loading<span class="bounce1"></span><span class="bounce2"></span><span class="bounce3"></span>');
                        }
                      }
                    }

                    reader.readAsDataURL(this.files[0]);
                  }
          });
			// Firefox focus bug fix for file input
			input.addEventListener( 'focus', function(){ input.classList.add( 'has-focus' ); });
			input.addEventListener( 'blur', function(){ input.classList.remove( 'has-focus' ); });

		});
	}( document, window, 0 ));
  

</script>


{% schema %}
{
  "name": "t:sections.product-with-steps.name",
  "settings": [
    {
      "type": "select",
      "id": "product_steps_color_scheme",
      "info": "t:sections.product-with-steps.settings.color_scheme.info",
      "options": [
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__1.label",
          "value": "accent-1"
        },
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__2.label",
          "value": "accent-2"
        },
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__3.label",
          "value": "background-1"
        },
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__4.label",
          "value": "background-2"
        },
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__5.label",
          "value": "background-3"
        },
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__6.label",
          "value": "background-4"
        },
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__7.label",
          "value": "background-5"
        },
        {
          "label": "t:sections.product-with-steps.settings.color_scheme.options__8.label",
          "value": "inverse"
        }
      ],
      "label": "t:sections.product-with-steps.settings.color_scheme.label",
      "default": "background-4"
    },
    {
      "type": "select",
      "id": "steps_color_scheme",
      "options": [
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__1.label",
          "value": "accent-1"
        },
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__2.label",
          "value": "accent-2"
        },
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__3.label",
          "value": "background-1"
        },
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__4.label",
          "value": "background-2"
        },
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__5.label",
          "value": "background-3"
        },
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__6.label",
          "value": "background-4"
        },
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__7.label",
          "value": "background-5"
        },
        {
          "label": "t:sections.product-with-steps.settings.steps_color_scheme.options__8.label",
          "value": "inverse"
        }
      ],
      "label": "t:sections.product-with-steps.settings.steps_color_scheme.label",
      "info": "t:sections.product-with-steps.settings.steps_color_scheme.info"
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "image_block",
      "name": "t:sections.product-with-steps.blocks.image_block.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "image_block",
          "default": true,
          "label": "t:sections.product-with-steps.blocks.image_block.settings.checkbox.label",
          "info": "t:sections.product-with-steps.blocks.image_block.settings.checkbox.info"
        }
      ]
    },
    {
      "type": "extra_product",
      "name": "t:sections.product-with-steps.blocks.extra_product.name",
      "limit": 1,
      "settings": [
        {
          "type": "product",
          "id": "product_handle",
          "label": "t:sections.product-with-steps.blocks.extra_product.settings.product.label",
          "info": "t:sections.product-with-steps.blocks.extra_product.settings.product.info"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.product-with-steps.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.product-with-steps.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.product-with-steps.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.product-with-steps.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.product-with-steps.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.product-with-steps.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.product-with-steps.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.product-with-steps.blocks.price.name",
      "limit": 1
    },
    {
      "type": "description",
      "name": "t:sections.product-with-steps.blocks.description.name",
      "limit": 1
    }
  ],
  "presets": [
    {
      "name": "t:sections.product-with-steps.presets.name",
      "category": "ADVANCED LAYOUT"
    }
  ]
}
{% endschema %} 